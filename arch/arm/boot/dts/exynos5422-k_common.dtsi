/*
 * SAMSUNG universal5422 board device tree source
 *
 * Copyright (c) 2013 Samsung Electronics Co., Ltd.
 *             http://www.samsung.com
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
*/

#include "exynos5422.dtsi"
#include "exynos5422-k_mhl2x.dtsi"

#define PIN_PULL_NONE		0
#define PIN_PULL_DOWN		1
#define PIN_PULL_UP		3

#define PIN_DRV_LV1		0
#define PIN_DRV_LV2		2
#define PIN_DRV_LV3		1
#define PIN_DRV_LV4		3

#define PIN_PDN_OUT0		0
#define PIN_PDN_OUT1		1
#define PIN_PDN_INPUT		2
#define PIN_PDN_PREV		3

#define PIN_IN(_pin, _pull, _drv)			\
	_pin {						\
		samsung,pins = #_pin;			\
		samsung,pin-function = <0>;		\
		samsung,pin-pud = <PIN_PULL_ ##_pull>;	\
		samsung,pin-drv = <PIN_DRV_ ##_drv>;	\
	}

#define PIN_OUT(_pin, _drv)				\
	_pin {						\
		samsung,pins = #_pin;			\
		samsung,pin-function = <1>;		\
		samsung,pin-pud = <0>;			\
		samsung,pin-drv = <PIN_DRV_ ##_drv>;	\
	}

#define PIN_OUT_SET(_pin, _val, _drv)			\
	_pin {						\
		samsung,pins = #_pin;			\
		samsung,pin-function = <1>;		\
		samsung,pin-pud = <0>;			\
		samsung,pin-drv = <PIN_DRV_ ##_drv>;	\
		samsung,pin-val	= <_val>;		\
	}

#define PIN_SLP(_pin, _mode, _pull)				\
	_pin {							\
		samsung,pins = #_pin;				\
		samsung,pin-con-pdn = <PIN_PDN_ ##_mode>;	\
		samsung,pin-pud-pdn = <PIN_PULL_ ##_pull>;	\
	}

/ {
	model = "Samsung universal5422 board based on EXYNOS5422";
	compatible = "samsung,universal5422", "samsung,exynos5422";

	chosen {
		bootargs = "console=ttySAC2,115200 vmalloc=512M noexec=on";
	};

	fixed-rate-clocks {
		oscclk {
			compatible = "samsung,exynos5422-oscclk";
			clock-frequency = <24000000>;
		};
	};

	rtc {
		status = "okay";
	};

	pinctrl@13410000 {
		pinctrl-names = "sleep";
		pinctrl-0 = <&sleep1>;
		sleep1: sleep-state {
				PIN_SLP(gpc0-0, PREV, NONE);	/* NAND_CLK */
				PIN_SLP(gpc0-1, PREV, NONE);	/* NAND_CMD */
				PIN_SLP(gpc0-2, PREV, NONE);	/* eMMC_EN */
				PIN_SLP(gpc0-3, PREV, NONE);	/* NAND_D(0) */
				PIN_SLP(gpc0-4, PREV, NONE);	/* NAND_D(1) */
				PIN_SLP(gpc0-5, PREV, NONE);	/* NAND_D(2) */
				PIN_SLP(gpc0-6, PREV, NONE);	/* NAND_D(3) */
				PIN_SLP(gpc0-7, PREV, NONE);	/* EMMC_RCLK */

				PIN_SLP(gpc1-0, OUT0, NONE);	/* WLAN_SDIO_CLK */
				PIN_SLP(gpc1-1, INPUT, NONE);	/* WLAN_SDIO_CMD */
				PIN_SLP(gpc1-2, INPUT, DOWN);	/* NC */
				PIN_SLP(gpc1-3, INPUT, NONE);	/* WLAN_SDIO_D(0) */
				PIN_SLP(gpc1-4, INPUT, NONE);	/* WLAN_SDIO_D(1) */
				PIN_SLP(gpc1-5, INPUT, NONE);	/* WLAN_SDIO_D(2) */
				PIN_SLP(gpc1-6, INPUT, NONE);	/* WLAN_SDIO_D(3) */
				PIN_SLP(gpc1-7, INPUT, DOWN);	/* NC */

				PIN_SLP(gpc2-0, INPUT, DOWN);	/* T_FLASH_CLK */
				PIN_SLP(gpc2-1, INPUT, DOWN);	/* T_FLASH_CMD */
				PIN_SLP(gpc2-2, INPUT, DOWN);	/* NC */
				PIN_SLP(gpc2-3, INPUT, DOWN);	/* T_FLASH_D(0) */
				PIN_SLP(gpc2-4, INPUT, DOWN);	/* T_FLASH_D(1) */
				PIN_SLP(gpc2-5, INPUT, DOWN);	/* T_FLASH_D(2) */
				PIN_SLP(gpc2-6, INPUT, DOWN);	/* T_FLASH_D(3) */

				PIN_SLP(gpc3-0, PREV, NONE);	/* NAND_D(4) */
				PIN_SLP(gpc3-1, PREV, NONE);	/* NAND_D(5) */
				PIN_SLP(gpc3-2, PREV, NONE);	/* NAND_D(6) */
				PIN_SLP(gpc3-3, PREV, NONE);	/* NAND_D(7) */

				PIN_SLP(gpc4-0, INPUT, NONE);	/* SVC_I2C_SDA */
				PIN_SLP(gpc4-1, INPUT, NONE);	/* SVC_I2C_SCL */

				PIN_SLP(gpd1-0, OUT0, NONE);	/* COMPANION_RSTN */
				PIN_SLP(gpd1-1, OUT0, NONE);	/* BTP_SLEEP/RST_N */
				PIN_SLP(gpd1-2, OUT0, NONE);	/* VT_CAM_1.2V_EN */
				PIN_SLP(gpd1-3, INPUT, DOWN);	/* OCTA_ID */
				PIN_SLP(gpd1-4, INPUT, DOWN);	/* TOUCH_I2C_SDA */
				PIN_SLP(gpd1-5, INPUT, DOWN);	/* TOUCH_I2C_SCL */
				PIN_SLP(gpd1-6, OUT0, NONE);	/* MAIN_CAM_A2.8V_EN */
				PIN_SLP(gpd1-7, INPUT, DOWN);	/* LCD_TE */

				PIN_SLP(gpy0-0, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy0-1, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy0-2, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy0-3, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy0-4, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy0-5, INPUT, DOWN);	/* NC */

				PIN_SLP(gpy1-0, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy1-1, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy1-2, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy1-3, INPUT, DOWN);	/* NC */

				PIN_SLP(gpy2-0, PREV, NONE);	/* TF_EN */
				PIN_SLP(gpy2-1, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy2-2, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy2-3, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy2-4, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy2-5, INPUT, DOWN);	/* NC */

				PIN_SLP(gpy3-0, PREV, NONE);	/* MMC01_EN */
				PIN_SLP(gpy3-1, PREV, NONE);	/* MMC2_EN */
				PIN_SLP(gpy3-2, OUT0, NONE);	/* MIPI_1.8V_EN */
				PIN_SLP(gpy3-3, PREV, NONE);	/* CODEC_POWER_EN */
				PIN_SLP(gpy3-4, INPUT, NONE);	/* SIM_SLOT */
				PIN_SLP(gpy3-5, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy3-6, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy3-7, INPUT, DOWN);	/* NC */

				PIN_SLP(gpy4-0, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy4-1, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy4-2, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy4-3, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy4-4, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy4-5, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy4-6, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy4-7, INPUT, DOWN);	/* NC */

				PIN_SLP(gpy5-0, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy5-1, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy5-2, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy5-3, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy5-4, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy5-5, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy5-6, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy5-7, INPUT, DOWN);	/* NC */

				PIN_SLP(gpy6-0, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy6-1, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy6-2, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy6-3, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy6-4, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy6-5, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy6-6, INPUT, DOWN);	/* NC */
				PIN_SLP(gpy6-7, INPUT, DOWN);	/* NC */
		};
	};

	pinctrl@14000000 {
		pinctrl-names = "sleep";
		pinctrl-0 = <&sleep2>;
		sleep2: sleep-state {
				PIN_SLP(gpe0-0, OUT0, NONE);	/* VT_CAM_STBY */
				PIN_SLP(gpe0-1, PREV, NONE);	/* FLASH_LED_EN */
				PIN_SLP(gpe0-2, PREV, NONE);	/* FLASH_LED_SET */
				PIN_SLP(gpe0-3, OUT0, NONE);	/* VT_CAM_NRST */
				PIN_SLP(gpe0-4, OUT0, NONE);	/* MAIN_CAM_RST */
				PIN_SLP(gpe0-5, OUT0, NONE);	/* COMP_EN */
				PIN_SLP(gpe0-6, INPUT, DOWN);	/* MAIN_CAM_SPI_CSN_GP */
				PIN_SLP(gpe0-7, INPUT, DOWN);	/* NC */

				PIN_SLP(gpe1-0, INPUT, DOWN);	/* COMP_SPI_INT */
				PIN_SLP(gpe1-1, INPUT, DOWN);	/* NC */

				PIN_SLP(gpf0-0, INPUT, DOWN);	/* MAIN_CAM_SDA */
				PIN_SLP(gpf0-1, INPUT, DOWN);	/* MAIN_CAM_SCL */
				PIN_SLP(gpf0-2, INPUT, DOWN);	/* AF_SDA */
				PIN_SLP(gpf0-3, INPUT, DOWN);	/* AF_SCL */
				PIN_SLP(gpf0-4, INPUT, DOWN);	/* VT_CAM_SDA */
				PIN_SLP(gpf0-5, INPUT, DOWN);	/* VT_CAM_SCL */

				PIN_SLP(gpf1-0, INPUT, DOWN);	/* MAIN_CAM_SPI_SCLK */
				PIN_SLP(gpf1-1, INPUT, DOWN);	/* MAIN_CAM_SPI_SSN */
				PIN_SLP(gpf1-2, INPUT, DOWN);	/* MAIN_CAM_SPI_MISO */
				PIN_SLP(gpf1-3, INPUT, DOWN);	/* MAIN_CAM_SPI_MOSI */
				PIN_SLP(gpf1-4, INPUT, DOWN);	/* NC */
				PIN_SLP(gpf1-5, INPUT, DOWN);	/* NC */
				PIN_SLP(gpf1-6, INPUT, DOWN);	/* NC */
				PIN_SLP(gpf1-7, INPUT, DOWN);	/* NC */

				PIN_SLP(gpg0-0, OUT1, NONE);	/* MCU_nRST_1.8V */
				PIN_SLP(gpg0-1, PREV, NONE);	/* CODEC_LDO_EN */
				PIN_SLP(gpg0-2, PREV, NONE);	/* CDONE */
				PIN_SLP(gpg0-3, INPUT, DOWN);	/* MHL_INT */
				PIN_SLP(gpg0-4, INPUT, DOWN);	/* COMP_BUCK_I2C_SCL */
				PIN_SLP(gpg0-5, INPUT, DOWN);	/* COMP_BUCK_I2C_SDA */
				PIN_SLP(gpg0-6, INPUT, DOWN);	/* PCD_INT */
				PIN_SLP(gpg0-7, PREV, DOWN);	/* BT_EN */

				PIN_SLP(gpg1-0, PREV, NONE);	/* IPC_SLAVE_WAKEUP */
				PIN_SLP(gpg1-1, PREV, UP);	/* NFC_FIRMWARE */
				PIN_SLP(gpg1-2, PREV, NONE);	/* NFC_EN */
				PIN_SLP(gpg1-3, OUT0, NONE);	/* SUSPEND_REQUEST_HSIC */
				PIN_SLP(gpg1-4, PREV, NONE);	/* CP_ON */
				PIN_SLP(gpg1-5, INPUT, DOWN);	/* TSP_ID */
				PIN_SLP(gpg1-6, PREV, NONE);	/* AP_DUMP_INT */
				PIN_SLP(gpg1-7, INPUT, DOWN);	/* ACTIVE_STATE_HSIC */

				PIN_SLP(gpg2-0, PREV, NONE);	/* CODEC_RESET_N */
				PIN_SLP(gpg2-1, PREV, NONE);	/* CORE_MODE */

				PIN_SLP(gpj4-0, INPUT, DOWN);	/* LCD_TE */
				PIN_SLP(gpj4-1, OUT1, NONE);	/* RESET_REQ_N */
				PIN_SLP(gpj4-2, OUT1, NONE);	/* CRESET_B */
				PIN_SLP(gpj4-3, OUT1, NONE);	/* MHL_RST */
		};
	};

	pinctrl@14010000 {
		pinctrl-names = "sleep";
		pinctrl-0 = <&sleep3>;
		sleep3: sleep-state {
				PIN_SLP(gpa0-0, INPUT, UP);	/* BT_UART_RXD */
				PIN_SLP(gpa0-1, OUT1, UP);	/* BT_UART_TXD */
				PIN_SLP(gpa0-2, INPUT, UP);	/* BT_UART_CTS */
				PIN_SLP(gpa0-3, OUT1, UP);	/* BT_UART_RTS */
				PIN_SLP(gpa0-4, INPUT, UP);	/* GPS_UART_RXD */
				PIN_SLP(gpa0-5, INPUT, UP);	/* GPS_UART_TXD */
				PIN_SLP(gpa0-6, INPUT, DOWN);	/* GPS_UART_CTS */
				PIN_SLP(gpa0-7, OUT1, NONE);	/* GPS_UART_RTS */

				PIN_SLP(gpa1-0, INPUT, DOWN);	/* AP_RXD */
				PIN_SLP(gpa1-1, INPUT, DOWN);	/* AP_TXD */
				PIN_SLP(gpa1-2, INPUT, NONE);	/* NFC_SDA_1.8V */
				PIN_SLP(gpa1-3, INPUT, NONE);	/* NFC_SCL_1.8V */
				PIN_SLP(gpa1-4, INPUT, NONE);	/* HEALTH_UART_RXD */
				PIN_SLP(gpa1-5, INPUT, NONE);	/* HEALTH_UART_TXD */

				PIN_SLP(gpa2-0, OUT0, NONE);	/* SHUB_SPI_SCK */
				PIN_SLP(gpa2-1, OUT0, NONE);	/* SHUB_SPI_SSN */
				PIN_SLP(gpa2-2, INPUT, DOWN);	/* SHUB_SPI_MISO */
				PIN_SLP(gpa2-3, OUT0, NONE);	/* SHUB_SPI_MOSI */
				PIN_SLP(gpa2-4, OUT0, NONE);	/* BTP_SPI_CLK */
				PIN_SLP(gpa2-5, OUT0, NONE);	/* BTP_SPI_CS_N */
				PIN_SLP(gpa2-6, INPUT, DOWN);	/* BTP_SPI_MISO */
				PIN_SLP(gpa2-7, OUT0, NONE);	/* BTP_SPI_MOSI */

				PIN_SLP(gpb0-0, PREV, NONE);	/* LCD_1P5_EN */
				PIN_SLP(gpb0-1, OUT0, NONE);	/* ERR_FG */
				PIN_SLP(gpb0-2, OUT0, NONE);	/* HEALTH_EN */
				PIN_SLP(gpb0-3, INPUT, NONE);	/* FUEL_SDA_1.8V */
				PIN_SLP(gpb0-4, INPUT, NONE);	/* FUEL_SCL_1.8V */

				PIN_SLP(gpb1-0, INPUT, NONE);	/* FPGA_SPI_SI */
				PIN_SLP(gpb1-1, OUT0, NONE);	/* CODEC_SPI_SCK */
				PIN_SLP(gpb1-2, OUT0, NONE);	/* CODEC_SPI_SSN */
				PIN_SLP(gpb1-3, INPUT, DOWN);	/* CODEC_SPI_MISO */
				PIN_SLP(gpb1-4, OUT0, NONE);	/* CODEC_SPI_MOSI */

				PIN_SLP(gpb2-0, OUT0, NONE);	/* VIBTONE_PWM */
				PIN_SLP(gpb2-1, INPUT, NONE);	/* COVER_ID */
				PIN_SLP(gpb2-2, INPUT, NONE);	/* AP_PMIC_SDA */
				PIN_SLP(gpb2-3, INPUT, NONE);	/* AP_PMIC_SCL */

				PIN_SLP(gpb3-0, INPUT, DOWN);	/* TS_I2C_SDA */
				PIN_SLP(gpb3-1, INPUT, DOWN);	/* TS_I2C_SCL */
				PIN_SLP(gpb3-2, INPUT, DOWN);	/* VT_CAM_SDA */
				PIN_SLP(gpb3-3, INPUT, DOWN);	/* VT_CAM_SCL */
				PIN_SLP(gpb3-4, INPUT, NONE);	/* MEM_LDO_SCL */
				PIN_SLP(gpb3-5, INPUT, NONE);	/* MEM_LDO_SDA */
				PIN_SLP(gpb3-6, INPUT, NONE);	/* IF_PMIC_SDA */
				PIN_SLP(gpb3-7, INPUT, NONE);	/* IF_PMIC_SCL */

				PIN_SLP(gpb4-0, INPUT, DOWN);	/* MHL_SDA_1.8V */
				PIN_SLP(gpb4-1, INPUT, DOWN);	/* MHL_SCL_1.8V */

				PIN_SLP(gph0-0, INPUT, NONE);	/* HW_REV0 */
				PIN_SLP(gph0-1, INPUT, NONE);	/* HW_REV1 */
				PIN_SLP(gph0-2, INPUT, NONE);	/* HW_REV2 */
				PIN_SLP(gph0-3, INPUT, NONE);	/* HW_REV3 */
				PIN_SLP(gph0-4, INPUT, NONE);	/* FPGA_SPI_CLK */
				PIN_SLP(gph0-5, OUT0, NONE);	/* MAIN_CAM_MCLK */
				PIN_SLP(gph0-6, OUT0, NONE);	/* 24MHZ_CLK_OUTPUT */
				PIN_SLP(gph0-7, OUT0, NONE);	/* VT_CAM_MCLK */
		};
	};

	dwmmc0@12200000 {
		status = "okay";
		num-slots = <1>;
		broken-cd;
		bypass-smu;
		fixed_volt;
		only_once_tune;
		supports-highspeed;
		supports-hs200-mode;
		sw_data_timeout;
		enable-no-sleep-cmd;
		fifo-depth = <0x40>;
		card-detect-delay = <200>;
		qos_int_level = <200000>;
		samsung,dw-mshc-ciu-div = <3>;
		samsung,dw-mshc-sdr-timing = <0 4 3>;
		samsung,dw-mshc-ddr-timing = <0 2 3>;
		samsung,dw-mshc-hs200-timing = <0 2 3>;
		samsung,dw-mshc-ddr200-timing = <0 2 1>;
		clk_pin = "gpc0-0";
		clk_addr = "13410000.pinctrl";
		clk_val = <0x3>;
		clk_str_num = <4>;
		num-ref-clks = <8>;
		ciu_clkin = <20812500 41625000 41625000 83250000 166500000 83250000 166500000 333000000>;
		pinctrl-names = "default";
		pinctrl-0 = <&sd0_clk &sd0_cmd &sd0_rdqs &sd0_bus1 &sd0_bus4 &sd0_bus8>;

		slot@0 {
			reg = <0>;
			bus-width = <8>;
		};
	};

	dwmmc1@12210000 {
		status = "okay";
		num-slots = <1>;
		channel = <1>;
		bypass-smu;
		ignore-phase = <(1 << 7)>;
		sw-timeout = <1000>;
		fixed_volt;
		supports-highspeed;
		sw_data_timeout;
		supports-sdr104-mode;
		keep-power-in-suspend;
		pm-ignore-notify;
		cd-type-external;
		cd-type = <2>;
		use-broken-voltage;
		fifo-depth = <0x40>;
		card-detect-delay = <200>;
		qos_int_level = <200000>;
		samsung,dw-mshc-ciu-div = <3>;
		samsung,dw-mshc-sdr-timing = <2 3 3>;
		samsung,dw-mshc-ddr-timing = <1 2 3>;
		clk_pin = "gpc1-0";
		clk_addr = "13410000.pinctrl";
		clk_val = <0x3>;
		clk_str_num = <4>;
		num-ref-clks = <8>;
		ciu_clkin = <20812500 41625000 41625000 83250000 166500000 83250000 166500000 333000000>;
		tp_mon_depth = <3>;
			     /* Byte/s,	 MIF clk, CPU clk, KFC clk*/
		tp_mon_table = <18000000 825000	1500000 1500000
				12000000 413000	0	0
				0	 0	0	0>;
		pinctrl-names = "default";
		//pinctrl-0 = <&sd1_clk &sd1_cmd &sd1_bus1 &sd1_bus4>;
		pinctrl-0 = <&sd1_clk &sd1_cmd &sd1_bus1 &sd1_bus4 &cfg_wlanen &cfg_wlanhostwake>; /* Set WLAN_EN configuration of power down mode */

		slot@0 {
			reg = <0>;
			bus-width = <4>;
		};
	};


	dwmmc2@12220000 {
		status = "okay";
		num-slots = <1>;
		supports-highspeed;
		sw_data_timeout;
		fifo-depth = <0x40>;
		card-detect-delay = <200>;
		qos_int_level = <200000>;
		samsung,dw-mshc-ciu-div = <3>;
		samsung,dw-mshc-sdr-timing = <2 3 3>;
		samsung,dw-mshc-ddr-timing = <1 2 3>;
		clk_pin = "gpc2-0";
		clk_addr = "13410000.pinctrl";
		clk_val = <0x3>;
		clk_str_num = <4>;
		num-ref-clks = <8>;
		ciu_clkin = <20812500 41625000 41625000 83250000 166500000 83250000 166500000 333000000>;
		pinctrl-names = "default";
		pinctrl-0 = <&sd2_clk &sd2_cmd &sd2_cd &sd2_bus1 &sd2_bus4 &dwmmc2_cd_irq>;

		gpio-controller;
		#gpio-cells = <2>;
		cd-gpio = <&gpx2 4 0xf>;

		slot@0 {
			reg = <0>;
			bus-width = <4>;
			disable-wp;
		};
	};

	serial@12C00000 {
		samsung,uart-wake-peer;
	};

	pinctrl@13400000 {
		pmic_irq: pmic-irq {
			samsung,pins = "gpx0-7";
			samsung,pin-pud = <3>;
			samsung,pin-drv = <3>;
		};

		hall_irq: hall-irq {
			samsung,pins = "gpx0-1";
			samsung,pin-function = <0xf>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		mfd_irq: mfd-irq {
			samsung,pins = "gpx1-4";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		fuel_irq: fuel-irq {
			samsung,pins = "gpx1-5";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		ssp_irq: ssp-irq {
			samsung,pins = "gpx3-0";
			samsung,pin-function = <0xf>;
			samsung,pin-pud = <3>;
			samsung,pin-drv = <3>;
		};
		ssp_irq2: ssp-irq2 {
			samsung,pins = "gpx3-3";
			samsung,pin-function = <0>;
			samsung,pin-pud = <3>;
			samsung,pin-drv = <3>;
		};
		ssp_ap_int: ssp-ap-int {
			samsung,pins = "gpx3-4";
			samsung,pin-function = <0>;
			samsung,pin-pud = <3>;
			samsung,pin-drv = <3>;
		};

		/* touchkey interrupt*/
		cfg_irq: cfg-irq {
			samsung,pins = "gpy7-1";
			samsung,pin-function = <0xf>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};
		cfg_input: cfg-input {
			samsung,pins = "gpy7-1";
			samsung,pin-function = <0>;
			samsung,pin-pud = <1>;
			samsung,pin-drv = <0>;
		};
		dwmmc2_cd_irq: dwmmc2-cd-irq {
			samsung,pins = "gpx2-4";
			samsung,pin-function = <0>;
			samsung,pin-pud = <3>;
			samsung,pin-drv = <3>;
		};
	};

	pinctrl@13410000 {
		/* touchkey i2c*/
		cfg_i2c: cfg-i2c {
			samsung,pins = "gpd1-5", "gpd1-4";
			samsung,pin-function = <3>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};
		cfg_gpio: cfg_gpio {
			samsung,pins = "gpd1-5", "gpd1-4";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};
		pm_wrsti: pm-wrsti {
			samsung,pins = "gpy3-0";
			samsung,pin-con-pdn = <3>;
		};
	};

	hsi2c@12CD0000 {
		samsung,hs-mode;
		clock-frequency = <2500000>;
		status = "okay";

		s2mps11_pmic@66 {
			compatible = "samsung,s2mps11-pmic";
			reg = <0x66>;
			interrupts = <7 0 0>;
			interrupt-parent = <&gpx0>;
			pinctrl-names = "default";
			pinctrl-0 = <&pmic_irq &pm_wrsti>;
			/* RTC: wtsr/smpl */
			wtsr_en = <1>; /* enable */
			smpl_en = <1>; /* enable */
			wtsr_timer_val = <3>;	/* 1000ms */
			smpl_timer_val = <0>;	/* 500ms */
			check_jigon = <0>; /* do not check jigon */
			/* RTC: If it's first boot, reset rtc to 1/1/2014 12:00:00(Wed) */
			init_time,sec = <0>;
			init_time,min = <0>;
			init_time,hour = <12>;
			init_time,mday = <1>;
			init_time,mon = <0>;
			init_time,year = <114>;
			init_time,wday = <3>;

			regulators {
				buck1_reg: BUCK1 {
					regulator-name = "vdd_mif";
					regulator-min-microvolt = <700000>;
					regulator-max-microvolt = <1300000>;
					regulator-always-on;
					regulator-boot-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
				};

				buck2_reg: BUCK2 {
					regulator-name = "vdd_eagle";
					regulator-min-microvolt = <800000>;
					regulator-max-microvolt = <1500000>;
					regulator-always-on;
					regulator-boot-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
				};

				buck3_reg: BUCK3 {
					regulator-name = "vdd_int";
					regulator-min-microvolt = <800000>;
					regulator-max-microvolt = <1400000>;
					regulator-always-on;
					regulator-boot-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
				};

				buck4_reg: BUCK4 {
					regulator-name = "vdd_g3d";
					regulator-min-microvolt = <700000>;
					regulator-max-microvolt = <1400000>;
					regulator-always-on;
					regulator-boot-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
				};

				buck6_reg: BUCK6 {
					regulator-name = "vdd_kfc";
					regulator-min-microvolt = <800000>;
					regulator-max-microvolt = <1500000>;
					regulator-always-on;
					regulator-boot-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
				};

				ldo13_reg: LDO13 {
					regulator-name = "vqmmc";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <3300000>;
					regulator-boot-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
				};

				ldo14_reg: LDO14 {
					regulator-name = "vcc_3.0v_motor";
					regulator-min-microvolt = <3000000>;
					regulator-max-microvolt = <3000000>;
					regulator-initial-mode = <3>;
				};

				ldo15_reg: LDO15 {
					regulator-name = "vt_cam_2_8v";
					regulator-min-microvolt = <2800000>;
					regulator-max-microvolt = <2800000>;
					/* regulator-always-on; */
					regulator-initial-mode = <3>;
				};

				ldo17_reg: LDO17 {
					regulator-name = "tsp_avdd";
					regulator-min-microvolt = <3300000>;
					regulator-max-microvolt = <3300000>;
				};

				ldo18_reg: LDO18 {
					regulator-name = "vdd_ldo18";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <1800000>;
					regulator-always-on;
					regulator-initial-mode = <3>;
				};

				ldo19_reg: LDO19 {
					regulator-name = "vmmc";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <2850000>;
					regulator-boot-on;
					regulator-initial-mode = <1>;
				};

				ldo20_reg: LDO20 {
					regulator-name = "vt_cam_1_8v";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <1800000>;
					regulator-initial-mode = <3>;
				};

				ldo21_reg: LDO21 {
					regulator-name = "vdd_ldo21";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <1800000>;
					regulator-initial-mode = <3>;
				};

				ldo22_reg: LDO22 {
					regulator-name = "vdd_ldo22";
					regulator-min-microvolt = <1200000>;
					regulator-max-microvolt = <1200000>;
					regulator-initial-mode = <3>;
				};

				ldo25_reg: LDO25 {
					regulator-name = "vdd_ldo25";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <1800000>;
					regulator-boot-on;
					regulator-initial-mode = <3>;
				};

				ldo27_reg: LDO27 {
					regulator-name = "vdd_ldo27";
					regulator-min-microvolt = <800000>;
					regulator-max-microvolt = <1100000>;
					regulator-always-on;
					regulator-initial-mode = <1>;
				};

				ldo28_reg: LDO28 {
					regulator-name = "vdd_ldo28";
					regulator-min-microvolt = <3000000>;
					regulator-max-microvolt = <3000000>;
					regulator-boot-on;
					regulator-initial-mode = <3>;
				};

				ldo30_reg: LDO30 {
					regulator-name = "vtouch_1.8v";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <1800000>;
				};

				ldo31_reg: LDO31 {
					regulator-name = "vdd_ldo31";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <1800000>;
					regulator-initial-mode = <3>;
				};


				ldo32_reg: LDO32 {
					regulator-name = "tsp_io";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <1800000>;
				};

				ldo33_reg: LDO33 {
					regulator-name = "VCC_1.8V_MHL";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <1800000>;
				};

				ldo34_reg: LDO34 {
					regulator-name = "VCC_3.3V_MHL";
					regulator-min-microvolt = <3300000>;
					regulator-max-microvolt = <3300000>;
				};

				ldo35_reg: LDO35 {
					regulator-name = "VSIL_1.2A";
					regulator-min-microvolt = <1200000>;
					regulator-max-microvolt = <1200000>;
				};

				ldo38_reg: LDO38 {
					regulator-name = "vtouch_3.3v";
					regulator-min-microvolt = <3300000>;
					regulator-max-microvolt = <3300000>;
				};
			};
		};
	};

	i2c@20{
		compatible = "i2c-gpio";
		gpios = <&gpd1 4 0 /* sda */
				&gpd1 5 0 /* scl */
				>;
		i2c-gpio,delay-us = <2>;
		#address-cells = <1>;
		#size-cells = <0>;
		status = "okay";

		cypress@20 {
			compatible = "cypress,cypress_touchkey";
			pinctrl-names = "on_irq","off_irq","on_i2c","off_i2c";
			pinctrl-0 = <&cfg_irq>;
			pinctrl-1 = <&cfg_input>;
			pinctrl-2 = <&cfg_i2c>;
			pinctrl-3 = <&cfg_gpio>;
			reg = <0x20>;
			interrupts = <1 0 0>;
			interrupt-parent = <&gpy7>;
			cypress,sda-gpio = <&gpd1 4 0>;
			cypress,scl-gpio = <&gpd1 5 0>;
			cypress,irq-gpio = <&gpy7 1 1>;
			cypress,i2c-gpio = "true";
			cypress,ic-stabilizing-time = <50>;
			cypress,multi-touchkey-fw-version = <0x1c>;
		};
	};

	i2c@21 {
		compatible = "i2c-gpio";
		gpios = <&gpc4 0 0 /* sda */
			&gpc4 1 0 /* scl */
			>;
		i2c-gpio,delay-us = <2>;
		#address-cells = <1>;
		#size-cells = <0>;
		status = "okay";
		lp5562@21 {
			compatible = "led,lp5562";
			reg = <0x21>;
		/* config data basic info */
			config_data_num = <3>;
			config_arr_size = <3>;
		/* pattern data basic info*/
			pattern_data_num = <7>;
			pattern_arr_size = <6>;
		/* config data info start */
			configset0 {
				c_name = "led_r";
				chan_nr = <0>;
				led_current = <40>;
				max_current = <40>;
			};
			configset1 {
				c_name = "led_g";
				chan_nr = <1>;
				led_current = <40>;
				max_current = <40>;
			};
			configset2 {
				c_name = "led_b";
				chan_nr = <2>;
				led_current = <40>;
				max_current = <40>;
			};
		/* pattern data info start */
		/* mode_charging */
			dataset0 {
				num = <0>;
				type = "r";
				size = <2>;
				data = /bits/ 8 <0x40 0xFF>;
			};
		/* mode_charging_err */
			dataset1 {
				num = <1>;
				type = "r";
				size = <8>;
				data = /bits/ 8 <0x40 0x00 0x60 0x00
						0x40 0xFF 0x60 0x00>;
			};
		/* mode_missed_noti */
			dataset2 {
				num = <2>;
				type = "b";
				size = <10>;
				data = /bits/ 8 <0x40 0x00 0x60 0x00
						0xA4 0xA1 0x40 0xFF
						0x60 0x00>;
			};
		/* mode_low_batt */
			dataset3 {
				num = <3>;
				type = "r";
				size = <10>;
				data = /bits/ 8 <0x40 0x00 0x60 0x00
						0xA4 0xA1 0x40 0xFF
						0x60 0x00>;
			};
		/* mode_full_chg */
			dataset4 {
				num = <4>;
				type = "g";
				size = <2>;
				data = /bits/ 8 <0x40 0xFF>;
			};
		/* mode_powering_green */
			dataset5 {
				num = <5>;
				type = "g";
				size = <18>;
				data = /bits/ 8 <0x40 0x11 0x0B 0x7A
						0x40 0x8C 0x55 0x00
						0xE0 0x08 0x0B 0xFA
						0x40 0x11 0x55 0x00
						0xE0 0x08>;
			};
		/* mode_powering_blue */
			dataset6 {
				num = <5>;
				type = "b";
				size = <18>;
				data = /bits/ 8 <0x40 0xCC 0x1B 0x32
						0x40 0xFF 0x55 0x00
						0xE1 0x00 0x1B 0xB2
						0x40 0xCC 0x55 0x00
						0xE1 0x00>;
			};
		};
	};

	i2c@22 {
		compatible = "i2c-gpio";
		gpios = <&gpb1 0 0 /* sda */
			&gph0 4 0 /* scl */
			>;
		i2c-gpio,delay-us = <2>;
		#address-cells = <1>;
		#size-cells = <0>;
		status = "okay";
		ice40lm@22 {
			compatible = "lattice,ice40lm";
			reg = <0x22>;
			ice40lm,creset_b = <&gpj4 2 0>;
			ice40lm,cdone = <&gpg0 2 0>;
			ice40lm,irda_irq = <&gpx0 4 0>;
			ice40lm,spi_si_sda = <&gpb1 0 0>;
			ice40lm,spi_clk_scl = <&gph0 4 0>;
			ice40lm,spi_en_rstn = <&gpy7 0 0>;
		};
	};

	pinctrl@14010000 {
		vibetonz_pwm: vibetonz_pwm {
			samsung,pins = "gpb2-0";
			samsung,pin-function = <2>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};
	};

	hsi2c@12E10000 {
		samsung,hs-mode;
		clock-frequency = <400000>;
		status = "okay";

		max77804@66 {
			compatible = "maxim,max77804";
			reg = <0x66>;
			pinctrl-names = "default";
			pinctrl-0 = <&mfd_irq &vibetonz_pwm>;
			max77804,irq-gpio = <&gpx1 4 0>;
			max77804,wc-irq-gpio = <0>;
			max77804,wakeup;

			regulators {
				safeout1: ESAFEOUT1 {
					regulator-compatible = "safeout1";
					regulator-name = "safeout1_range";
					regulator-min-microvolt = <3300000>;
					regulator-max-microvolt = <4900000>;
					regulator-boot-on;
				};

				safeout2: ESAFEOUT2 {
					regulator-compatible = "safeout2";
					regulator-name = "safeout2_range";
					regulator-min-microvolt = <3300000>;
					regulator-max-microvolt = <4900000>;
				};
			};
		};
	};

	pinctrl@14000000 {
		disp_pcd: disp_pcd {
			samsung,pins = "gpg0-6";
			samsung,pin-function = <0>;
			samsung,pin-pud = <1>;
		};
	};

	pinctrl@14010000 {
		disp_errfg: disp_errfg {
			samsung,pins = "gpb0-1";
			samsung,pin-function = <0>;
			samsung,pin-pud = <1>;
		};
	};

/*disp_driver {*/
	fimd_fb: fimd_fb {
		LCD18V-supply = <&ldo25_reg>;
		LCD30V-supply = <&ldo28_reg>;
		oled-id-gpio = <&gpd1 3 0x0>;
		oled-pcd-gpio = <&gpg0 6 0x0>;
		oled-errfg-gpio = <&gpb0 1 0x0>;
		lcd_info = <&s6e3fa2>;
		gpios = <&gpd1 7 0xf>;

		pinctrl-names = "default", "turnon_tes", "turnoff_tes";
		pinctrl-0 = <&disp_pcd &disp_errfg>;
		pinctrl-1 = <&disp_teson>;
		pinctrl-2 = <&disp_tesoff>;

		fimd: fimd_ctrl {
			samsung,left_margin = <130>;
			samsung,right_margin = <130>;
			samsung,upper_margin = <4>;
			samsung,lower_margin = <42>;
			samsung,hsync_len = <20>;
			samsung,vsync_len = <16>;
			samsung,xres = <1080>;
			samsung,yres = <1920>;
			samsung,virtual_x = <1080>;
			samsung,virtual_y = <3840>;
			samsung,width = <65>;
			samsung,height = <115>;
			samsung,max_bpp = <32>;
			samsung,default_bpp = <24>;

			fb_driver_data {
				fb_win_variant_0 {
					has_osd_c = <1>;
					has_osd_d = <0>;
					has_osd_alpha = <0>;
					osd_size_off = <0x08>;
					palette_size = <256>;
					VALID_BPP_1248 = <1>;
					VALID_BPP_13 = <1>;
					VALID_BPP_15 = <1>;
					VALID_BPP_16 = <1>;
					VALID_BPP_18 = <1>;
					VALID_BPP_19 = <1>;
					VALID_BPP_24 = <1>;
					VALID_BPP_25 = <1>;
					VALID_BPP_32 = <1>;
				};
				fb_win_variant_1 {
					has_osd_c = <1>;
					has_osd_d = <1>;
					has_osd_alpha = <1>;
					osd_size_off = <0x0c>;
					palette_size = <256>;
					VALID_BPP_1248 = <1>;
					VALID_BPP_13 = <1>;
					VALID_BPP_15 = <1>;
					VALID_BPP_16 = <1>;
					VALID_BPP_18 = <1>;
					VALID_BPP_19 = <1>;
					VALID_BPP_24 = <1>;
					VALID_BPP_25 = <1>;
					VALID_BPP_32 = <1>;
				};
				fb_win_variant_2 {
					has_osd_c = <1>;
					has_osd_d = <1>;
					has_osd_alpha = <1>;
					osd_size_off = <0x0c>;
					palette_size = <256>;
					VALID_BPP_1248 = <1>;
					VALID_BPP_13 = <1>;
					VALID_BPP_15 = <1>;
					VALID_BPP_16 = <1>;
					VALID_BPP_18 = <1>;
					VALID_BPP_19 = <1>;
					VALID_BPP_24 = <1>;
					VALID_BPP_25 = <1>;
					VALID_BPP_32 = <1>;
				};
				fb_win_variant_3 {
					has_osd_c = <1>;
					has_osd_d = <0>;
					has_osd_alpha = <1>;
					osd_size_off = <0x0>;
					palette_size = <256>;
					VALID_BPP_1248 = <1>;
					VALID_BPP_13 = <1>;
					VALID_BPP_15 = <1>;
					VALID_BPP_16 = <1>;
					VALID_BPP_18 = <1>;
					VALID_BPP_19 = <1>;
					VALID_BPP_24 = <1>;
					VALID_BPP_25 = <1>;
					VALID_BPP_32 = <1>;
				};
				fb_win_variant_4 {
					has_osd_c = <1>;
					has_osd_d = <0>;
					has_osd_alpha = <1>;
					osd_size_off = <0x0>;
					palette_size = <256>;
					VALID_BPP_1248 = <1>;
					VALID_BPP_13 = <1>;
					VALID_BPP_15 = <1>;
					VALID_BPP_16 = <1>;
					VALID_BPP_18 = <1>;
					VALID_BPP_19 = <1>;
					VALID_BPP_24 = <1>;
					VALID_BPP_25 = <1>;
					VALID_BPP_32 = <1>;
				};
			};
		};
		mipi_dsi: mipi_dsi {
			gpios = <&gpy7 4 0x1>, <&gpy3 2 0x1>, <&gpb0 0 0x1>;

			interrupt-parent = <&gic>;
			interrupts = <0 82 0>;
			/* Interface definition: 0 - DSIM_COMMAND,
						 1 - DSIM_VIDEO */
			e_interface = <0>;

			/* Pixel format : 0 - DSIM_CMD_3BPP,
					  1 - DSIM_CMD_8BPP,
					  2 - DSIM_CMD_12BPP,
					  3 - DSIM_CMD_16BPP,
					  4 - DSIM_VID_16BPP_565,
					  5 - DSIM_VID_18BPP_666PACKED,
					  6 - DSIM_18BPP_666LOOSELYPACKED,
					  7 - DSIM_24BPP_888 */
			e_pixel_format = <7>;

			/* main frame fifo auto flush at VSYNC pulse */
			auto_flush = <0>;
			eot_disable = <1>;
			auto_vertical_cnt = <0>;
			hse = <0>;
			hfp = <0>;
			hbp = <0>;
			hsa = <0>;

			/* num of data lane : 0 - DSIM_DATA_LANE_1,
					      1 - DSIM_DATA_LANE_2,
					      2 - DSIM_DATA_LANE_3,
					      3 - DSIM_DATA_LANE_4 */
			e_no_data_lane = <3>;
			/* byte clock divider : 0 - DSIM_PLL_OUT_DIV8,
						1 - DSIM_EXT_CLK_DIV8,
						2 - DSIM_EXT_CLK_BYPASS */
			e_byte_clk = <0>;
			/* Burst mode : 0 - DSIM_NON_BURST_SYNC_EVENT,
					2 - DSIM_NON_BURST_SYNC_PULSE,
					1 - DSIM_BURST
					4 - DSIM_NON_VIDEO_MODE */
			e_burst_mode = <1>;
			/* PMS
			   - 1. LCD_S6E8AA0 : p - 4, m - 80, s - 1
			   - 2. LCD_S6E3FA0(COMMAND): p - 2, m - 46, s - 0
			   - 3. LCD_S6E3FA0(VIDEO): p - 4, m - 75, s - 0
			   - 4. LCD_S6E3HA0(COMMAND): p - 2, m - 46, s - 0 */
			p = <2>;
			m = <46>;
			s = <0>;
			/* D-PHY PLL stable time spec :min = 200usec ~ max 400usec */
			pll_stable_time = <23000>;
			/* escape clk : 16MHz */
			esc_clk = <16000000>;
			/* stop state holding counter after bta change count 0 ~ 0xfff */
			stop_holding_cnt = <10>;
			/* bta timeout 0 ~ 0xff */
			bta_timeout = <0xff>;
			/* lp rx timeout 0 ~ 0xffff */
			rx_timeout = <0xffff>;
		};
		s6e3fa2: s6e3fa2_fhd {
			mode = <0>;
			resolution = <1080 1920>;
			size = <65 115>;
			timing,refresh = <60>;
			timing,h-porch = <1 10 1>;
			timing,v-porch = <1 1 1>;
			timing,dsi-hs-clk = <896>;
			timing,dsi-escape-clk = <19>;
		};
	};

	muic {
		status = "disabled";
		muic,support-list = "MHL","OTG","Jig USB On","Jig UART Off",
				    "Jig UART Off + VB","TA","USB","CDP",
				    "Deskdock","Deskdock + VB",
				    "Smartdock","Smartdock + VB","Smartdock + TA","Smartdock + USB";
	};

	hall {
		status = "okay";
		compatible = "hall";
		pinctrl-names = "default";
		pinctrl-0 = <&hall_irq>;
		hall,gpio_flip_cover = <&gpx0 1 0>;
	};

	haptic {
		status = "okay";
		haptic,max_timeout = <10000>;
		haptic,duty = <34500>;
		haptic,period = <38240>;
		haptic,reg2 = <0x82>;
		haptic,pwm_id = <0>;
		haptic,regulator_name = "vcc_3.0v_motor";
	};

	torch {
		status = "okay";
		leds1 {
			ledname = "leds-sec1";
		/* MAX77804_FLASH_LED_1 */
			id = <0>;
		/* MAX77804_FLASH_TIME_187P5MS */
			timer = <2>;
		/* MAX77804_TIMER_MODE_MAX_TIMER */
			timer_mode = <1>;
		/* MAX77804_LED_CTRL_BY_FLASHSTB */
			cntrl_mode = <0>;
			brightness = <0x3D>;
		};
		leds2 {
			ledname = "torch-sec1";
		/* MAX77804_TORCH_LED_1 */
			id = <1>;
		/* MAX77804_LED_CTRL_BY_FLASHSTB */
			cntrl_mode = <0>;
			brightness = <0x06>;
		};
	};

	w1_gpio_exynos {
		status = "okay";
		compatible = "w1_gpio_exynos";
		is_open_drain = <1>;
		slave_speed = <1>;
		w1,gpio = <&gpb2 1 0>;
	};

	gpio_keys {
		compatible = "gpio-keys";
		#address-cells = <1>;
		#size-cells = <0>;
		poll-interval = <100>;
		button@1 {
			label = "gpio-keys: KEY_POWER";
			interrupts = <2 0 0>;
			interrupt-parent = <&gpx2>;
			linux,code = <116>;
			gpios = <&gpx2 2 0xf>;
			gpio-key,wakeup = <1>;
		};
		button@2 {
			label = "gpio-keys: KEY_VOLUMEDOWN";
			interrupts = <3 0 0>;
			interrupt-parent = <&gpx0>;
			linux,code = <114>;
			gpios = <&gpx0 3 0xf>;
		};
		button@3 {
			label = "gpio-keys: KEY_VOLUMEUP";
			interrupts = <2 0 0>;
			interrupt-parent = <&gpx0>;
			linux,code = <115>;
			gpios = <&gpx0 2 0xf>;
		};
		button@4 {
			label = "gpio-keys: KEY_HOMEPAGE";
			interrupts = <5 0 0>;
			interrupt-parent = <&gpx0>;
			linux,code = <172>;
			gpios = <&gpx0 5 0xf>;
			gpio-key,wakeup = <1>;
		};
	};

	sec_input_debug-keys {
		compatible = "sec_input_debug-keys";

		button@1 {
			label = "debug-keys: KEY_POWER";
			linux,code = <116>;
		};
		button@2 {
			label = "debug-keys: KEY_VOLUMEDOWN";
			linux,code = <114>;
			state = "true";
		};
		button@3 {
			label = "debug-keys: KEY_VOLUMEUP";
			linux,code = <115>;
		};
	};

	pinctrl@13400000 {
		cfg_wlanen: cfg-wlanen {
			samsung,pins = "gpy7-7";
			samsung,pin-function = <1>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <3>;
			samsung,pin-con-pdn = <3>;
			samsung,pin-pud-pdn = <0>;
		};

		cfg_wlanhostwake: cfg-wlanhostwake {
			samsung,pins = "gpx2-0";
			samsung,pin-function = <0>;
			samsung,pin-pud = <1>;
			samsung,pin-con-pdn = <2>;
			samsung,pin-pud-pdn = <0>;
		};
	};

	wlan {
		compatible = "samsung,brcm-wlan";
		gpios = <&gpy7 7 0x1 /* WLAN_EN */
				&gpx2 0 0xF	/* WLAN_HOST_WAKE */
				>;
		pinctrl-names = "default";
		pinctrl-0=<&cfg_wlanen &cfg_wlanhostwake>;
		status = "okay";
	};

	usb@12000000 {
		status = "okay";

		dwc3 {
			maximum-speed = "super-speed";
			dr_mode = "otg";
		};
	};

	usb_notifier {
		compatible = "samsung,usb-notifier";
	};

	i2s0: i2s@03830000 {
		status = "okay";
	};

	i2s_dummy: dummy-i2s {
		compatible = "samsung,dummy-i2s";
		status = "okay";
	};

	sound {
		compatible = "samsung,pacific-arizona";
		samsung,audio-cpu = <&i2s0		/* primary */
				     &i2s_dummy
				     &i2s_dummy
				     &i2s0>;		/* secondary */
		samsung,audio-codec = <&audio_codec
				       &audio_codec
				       &audio_codec
				       &audio_codec>;
		status = "okay";
	};

	fimc_is@13000000 {
		gpios_main_reset = <&gpe0 4 0x1>; /* MAINCAM_RESET */
		gpios_vt_stby = <&gpe0 0 0x1>; /*VT_CAM_STBY */
		gpios_vt_reset = <&gpe0 3 0x1>; /* VT_CAM_RESET */
		gpios_vt_en = <&gpd1 2 0x1>; /* VT_CAM_1_2_EN*/
	};

	pinctrl@14000000 {
		fimc_is_flash: fimc-is-flash {
			samsung,pins = "gpf1-0", "gpf1-1";
			samsung,pin-function = <3>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};
	};

	sec_thermistor {
		compatible = "samsung,sec-ap-thermistor";
		status = "okay";
		/* HA data */
		adc_array = <181 261 361 489 659 718 759 824 869 914 982 1030 1099 1145 1215 1263 1333 1377 1439 1483 1518 1537 1557 1593 1628 1678 1704 1745 1770 1805 1827>;
		temp_array = <800 700 600 500 400 370 350 320 300 280 250 230 200 180 150 130 100 80 50 30 10 0 (-10) (-30) (-50) (-80) (-100) (-130) (-150) (-180) (-200)>;

		io-channels = <&exynos_adc 0>;
		io-channel-names = "adc-ap-temp";
		io-channel-ranges;
	};

	secgpio_dvs {
		compatible = "samsung,exynos5422-secgpio-dvs";
		status = "okay";
	};

	ion {
		compatible = "samsung,exynos5430-ion";

		contig-names = "common",
			       "mfc_sh",
			       "g2d_wfd",
			       "video",
			       "mfc_input",
			       "sectbl",
			       "mfc_fw",
			       "mfc_nfw";

		contig = <0 0x6650000 0x0>,
		         <2 0x400000 0x0>,
		         <10 0x800000 0x0>,
		         <11 0x6000000 0x0>,
		         <7 0x1000000 0x0>,
		         <9 0x400000 0x0>,
		         <8 0x400000 0x0>,
		         <12 0x400000 0x0>;

		ion_noncontig_heap {
			id-type = <0 0>;
		};

		exynos_contig_heap {
			id-type = <4 6>;
		};
	};

	ipa_pdata {
		compatible = "samsung,exynos-ipa";

		control_temp = <81>;
		temp_threshold = <30>;
		enabled = <1>;
		tdp = <3500>;
		boost = <1>;
		ros_power = <500>;
		a7_weight = <1024>;
		a15_weight = <256>;
		gpu_weight = <1024>;
		a7_max_power = <1000>;
		a15_max_power = <6552>;
		gpu_max_power = <3110>;
		hotplug_out_threshold = <10>;
		hotplug_in_threshold = <2>;
		enable_ctlr = <1>;
		ctlr.mult = <2>;
		ctlr.k_i = <1>;
		ctlr.k_d = <0>;
		ctlr.feed_forward = <1>;
		ctlr.integral_reset_value = <0>;
		ctlr.integral_cutoff = <0>;
		ctlr.integral_reset_threshold = <10>;
	};
};
